name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 코드 불러오기
        uses: actions/checkout@v4

      - name: Docker Buildx 세팅하기
        uses: docker/setup-buildx-action@v3

      - name: DockerHub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 설정파일(application.yml) 디렉토리 만들기 & 주입
        run: |
          mkdir -p ./backend/src/main/resources/
          echo "${{ secrets.APPLICATION_YML }}" > ./backend/src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" > ./backend/src/main/resources/application-dev.yml

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: rudalsss/dmatch:latest

      - name: EC2접속(SSH)후 이미지 배포
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull rudalsss/dmatch:latest
            docker stop dmatch-server || true
            docker rm dmatch-server || true
            docker run -d --name dmatch-server --network="host" -p 8080:8080 rudalsss/dmatch:latest